)
# change variable type
dt_refrigerator$depth_cm <- as.numeric(dt_refrigerator$depth_cm)
# Round values
dt_refrigerator$depth_cm <- round(dt_refrigerator$depth_cm, 0)
# if "(nettó) / (bruttó) or anithing with paranthesis" is included -> change it to ""
dt_refrigerator$weight_kg <- gsub(" *\\(.*?\\) *", "", dt_refrigerator$weight_kg)
# if "kg" is included -> change it to ""
dt_refrigerator$weight_kg <- str_replace(dt_refrigerator$weight_kg, "kg", "")
# if space is included -> change it to ""
dt_refrigerator$weight_kg <- str_replace(dt_refrigerator$weight_kg, " ", "")
# change decimal
dt_refrigerator$weight_kg <- str_replace(dt_refrigerator$weight_kg, ",", ".")
# If"/" is included (beacause 2 values are recorded) -> get the first number before the slash mark
dt_refrigerator$weight_kg <- ifelse(grepl("/", dt_refrigerator$weight_kg,fixed = TRUE),
str_sub(dt_refrigerator$weight_kg, 1, 2),
dt_refrigerator$weight_kg
)
# change variable type
dt_refrigerator$weight_kg <- as.numeric(dt_refrigerator$weight_kg)
# Round values
dt_refrigerator$weight_kg <- round(dt_refrigerator$weight_kg, 0)
# if "db" is included -> change it to ""
dt_refrigerator$n_doors <- str_replace(dt_refrigerator$n_doors, "db", "")
# if space is included -> change it to ""
dt_refrigerator$n_doors <- str_replace(dt_refrigerator$n_doors, " ", "")
# change variable type
dt_refrigerator$n_doors <- as.numeric(dt_refrigerator$n_doors)
# if "nincs hűtő rész" is included -> change it to ""
dt_refrigerator$cooling_capacity_l <- str_replace(dt_refrigerator$cooling_capacity_l, "nincs hűtő rész", "0")
# when "palackos" expression is included -> convert it to litre
dt_refrigerator$cooling_capacity_l <- ifelse(grepl("palackos", dt_refrigerator$cooling_capacity_l, fixed = TRUE),
round(as.numeric(str_sub(dt_refrigerator$cooling_capacity_l, 1, 2)) * 2.9,0),
dt_refrigerator$cooling_capacity_l
)
# if "db" is included -> change it to ""
dt_refrigerator$cooling_capacity_l <- str_replace(dt_refrigerator$cooling_capacity_l, "l", "")
# if space is included -> change it to ""
dt_refrigerator$cooling_capacity_l <- str_replace(dt_refrigerator$cooling_capacity_l, " ", "")
# change decimal
dt_refrigerator$cooling_capacity_l <- str_replace(dt_refrigerator$cooling_capacity_l, ",", ".")
# change variable type
dt_refrigerator$cooling_capacity_l <- as.numeric(dt_refrigerator$cooling_capacity_l)
# if "nincs hűtő rész" is included -> change it to ""
dt_refrigerator$freezing_capacity_l <- str_replace(dt_refrigerator$freezing_capacity_l, "nincs fagyasztó rész", "0")
# if "db" is included -> change it to ""
dt_refrigerator$freezing_capacity_l <- str_replace(dt_refrigerator$freezing_capacity_l, "l", "")
# if space is included -> change it to ""
dt_refrigerator$freezing_capacity_l <- str_replace(dt_refrigerator$freezing_capacity_l, " ", "")
# change decimal
dt_refrigerator$freezing_capacity_l <- str_replace(dt_refrigerator$freezing_capacity_l, ",", ".")
# change variable type
dt_refrigerator$freezing_capacity_l <- as.numeric(dt_refrigerator$freezing_capacity_l)
dt_refrigerator$total_capacity <- ifelse(is.na(dt_refrigerator$cooling_capacity_l) == TRUE,
0,
dt_refrigerator$cooling_capacity_l
) +
ifelse(is.na(dt_refrigerator$freezing_capacity_l) == TRUE,
0,
dt_refrigerator$freezing_capacity_l
)
# if "Ft" is included -> change it to ""
dt_refrigerator$item_price_edigital <- str_replace(dt_refrigerator$item_price_edigital, "Ft", "")
# remove white space
dt_refrigerator$item_price_edigital <- gsub("^\\s+|\\s+$", "", dt_refrigerator$item_price_edigital)
dt_refrigerator$item_price_edigital <- gsub("\\s", "", dt_refrigerator$item_price_edigital)
# change variable type
dt_refrigerator$item_price_edigital <- as.numeric(dt_refrigerator$item_price_edigital)
# change variable type
dt_refrigerator$item_price_mediamarkt <- as.numeric(dt_refrigerator$item_price_mediamarkt)
# Define new variable
dt_refrigerator$website <- ifelse(is.na(dt_refrigerator$website_category_edigital) == FALSE,
"edigital",
"mediamarkt"
)
# Drop unused variables
dt_refrigerator$website_category_edigital <- NULL
dt_refrigerator$website_category_mediamarkt <- NULL
# Create unique item_id
unique_list_item <- dt_refrigerator %>% select("item_name_short", "colour") %>% unique()
dt_item_id <- data.table(common_item_id = seq(1: nrow(unique_list_item)),
item_name_short = unique_list_item$item_name_short,
colour = unique_list_item$colour
)
# Merge id to the table
dt_refrigerator <- merge(dt_refrigerator, dt_item_id, by = c("item_name_short","colour"))
write.table(dt_refrigerator, "dt_refrigerator.txt", sep = "|", row.names = FALSE)
View(dt_refrigerator)
names(dt_refrigerator)
dt_attribute <- dt_refrigerator %>% select("common_item_id",
"colour",
"producer",
"type",
"energy_class",
"energy_consumption",
"guarantee_month",
"width_cm",
"height_cm",
"depth_cm",
"weight_kg",
"n_doors",
"cooling_capacity_l",
"freezing_capacity_l")
dt_attribute <- dt_attribute[,list(energy_consumption = max(energy_consumption, na.rm = T)), by = common_item_id]
View(dt_attribute)
dt_attribute <- dt_attribute[,list(energy_consumption = max(energy_consumption, na.rm = T),
guarantee_month = max(guarantee_month, na.rm = T),
width_cm = max(width_cm, na.rm = T),
height_cm = max(height_cm, na.rm = T),
depth_cm = max(depth_cm, na.rm = T),
weight_kg = max(weight_kg, na.rm = T),
n_doors = max(n_doors, na.rm = T),
cooling_capacity_l = max(cooling_capacity_l, na.rm = T),
freezing_capacity_l = max(freezing_capacity_l, na.rm = T),
),
by = common_item_id]
dt_attribute <- dt_refrigerator %>% select("common_item_id",
"colour",
"producer",
"type",
"energy_class",
"energy_consumption",
"guarantee_month",
"width_cm",
"height_cm",
"depth_cm",
"weight_kg",
"n_doors",
"cooling_capacity_l",
"freezing_capacity_l")
dt_attribute <- dt_attribute[,list(energy_consumption = max(energy_consumption, na.rm = T),
guarantee_month = max(guarantee_month, na.rm = T),
width_cm = max(width_cm, na.rm = T),
height_cm = max(height_cm, na.rm = T),
depth_cm = max(depth_cm, na.rm = T),
weight_kg = max(weight_kg, na.rm = T),
n_doors = max(n_doors, na.rm = T),
cooling_capacity_l = max(cooling_capacity_l, na.rm = T),
freezing_capacity_l = max(freezing_capacity_l, na.rm = T),
),
by = common_item_id]
dt_attribute <- dt_refrigerator %>% select("common_item_id",
"colour",
"producer",
"type",
"energy_class",
"energy_consumption",
"guarantee_month",
"width_cm",
"height_cm",
"depth_cm",
"weight_kg",
"n_doors",
"cooling_capacity_l",
"freezing_capacity_l")
dt_attribute <- dt_attribute[,list(energy_consumption = max(energy_consumption, na.rm = T),
guarantee_month = max(guarantee_month, na.rm = T),
width_cm = max(width_cm, na.rm = T),
height_cm = max(height_cm, na.rm = T),
depth_cm = max(depth_cm, na.rm = T),
weight_kg = max(weight_kg, na.rm = T),
n_doors = max(n_doors, na.rm = T),
cooling_capacity_l = max(cooling_capacity_l, na.rm = T),
freezing_capacity_l = max(freezing_capacity_l, na.rm = T),),
by = common_item_id]
dt_attribute <- dt_refrigerator %>% select("common_item_id",
"colour",
"producer",
"type",
"energy_class",
"energy_consumption",
"guarantee_month",
"width_cm",
"height_cm",
"depth_cm",
"weight_kg",
"n_doors",
"cooling_capacity_l",
"freezing_capacity_l")
dt_attribute <- dt_attribute[,list(energy_consumption = max(energy_consumption, na.rm = T),
guarantee_month = max(guarantee_month, na.rm = T),
width_cm = max(width_cm, na.rm = T),
height_cm = max(height_cm, na.rm = T),
depth_cm = max(depth_cm, na.rm = T),
weight_kg = max(weight_kg, na.rm = T),
n_doors = max(n_doors, na.rm = T),
cooling_capacity_l = max(cooling_capacity_l, na.rm = T),
freezing_capacity_l = max(freezing_capacity_l, na.rm = T)),
by = common_item_id]
View(dt_attribute)
View(dt_refrigerator)
dt_attribute <- dt_refrigerator %>% select("common_item_id",
"colour",
"producer",
"type",
"energy_class",
"energy_consumption",
"guarantee_month",
"width_cm",
"height_cm",
"depth_cm",
"weight_kg",
"n_doors",
"cooling_capacity_l",
"freezing_capacity_l")
dt_attribute <- dt_attribute[,list(energy_consumption = max(energy_consumption, na.rm = T),
guarantee_month = max(guarantee_month, na.rm = T),
width_cm = max(width_cm, na.rm = T),
height_cm = max(height_cm, na.rm = T),
depth_cm = max(depth_cm, na.rm = T),
weight_kg = max(weight_kg, na.rm = T),
n_doors = max(n_doors, na.rm = T),
cooling_capacity_l = max(cooling_capacity_l, na.rm = T),
freezing_capacity_l = max(freezing_capacity_l, na.rm = T),
colour = colour),
by = common_item_id]
dt_attribute <- dt_refrigerator %>% select("common_item_id",
"colour",
"producer",
"type",
"energy_class",
"energy_consumption",
"guarantee_month",
"width_cm",
"height_cm",
"depth_cm",
"weight_kg",
"n_doors",
"cooling_capacity_l",
"freezing_capacity_l")
dt_attribute <- dt_attribute[,list(energy_consumption = max(energy_consumption, na.rm = T),
guarantee_month = max(guarantee_month, na.rm = T),
width_cm = max(width_cm, na.rm = T),
height_cm = max(height_cm, na.rm = T),
depth_cm = max(depth_cm, na.rm = T),
weight_kg = max(weight_kg, na.rm = T),
n_doors = max(n_doors, na.rm = T),
cooling_capacity_l = max(cooling_capacity_l, na.rm = T),
freezing_capacity_l = max(freezing_capacity_l, na.rm = T),
colour = max(colour)),
by = common_item_id]
# Filter for relevant columns
dt_attribute <- dt_refrigerator %>% select("common_item_id",
"colour",
"producer",
"type",
"energy_class",
"energy_consumption",
"guarantee_month",
"width_cm",
"height_cm",
"depth_cm",
"weight_kg",
"n_doors",
"cooling_capacity_l",
"freezing_capacity_l")
# Create attribute table
dt_attribute <- dt_attribute[,list(energy_consumption = max(energy_consumption, na.rm = T),
guarantee_month = max(guarantee_month, na.rm = T),
width_cm = max(width_cm, na.rm = T),
height_cm = max(height_cm, na.rm = T),
depth_cm = max(depth_cm, na.rm = T),
weight_kg = max(weight_kg, na.rm = T),
n_doors = max(n_doors, na.rm = T),
cooling_capacity_l = max(cooling_capacity_l, na.rm = T),
freezing_capacity_l = max(freezing_capacity_l, na.rm = T),
colour = max(colour, na.rm = T),
producer = max(producer, na.rm = T),
type = max(type, na.rm = T),
energy_class = max(energy_class, na.rm = T)),
by = common_item_id]
# Change Inf to Na
View(dt_attribute)
# Change Inf to Na
dt_attribute[dt_attribute$energy_consumption == "-Inf", "energy_consumption"] <- NA
# Filter for relevant columns
dt_attribute <- dt_refrigerator %>% select("common_item_id",
"colour",
"producer",
"type",
"energy_class",
"energy_consumption",
"guarantee_month",
"width_cm",
"height_cm",
"depth_cm",
"weight_kg",
"n_doors",
"cooling_capacity_l",
"freezing_capacity_l")
# Create attribute table
dt_attribute <- dt_attribute[,list(energy_consumption = max(energy_consumption, na.rm = T),
guarantee_month = max(guarantee_month, na.rm = T),
width_cm = max(width_cm, na.rm = T),
height_cm = max(height_cm, na.rm = T),
depth_cm = max(depth_cm, na.rm = T),
weight_kg = max(weight_kg, na.rm = T),
n_doors = max(n_doors, na.rm = T),
cooling_capacity_l = max(cooling_capacity_l, na.rm = T),
freezing_capacity_l = max(freezing_capacity_l, na.rm = T),
colour = max(colour, na.rm = T),
producer = max(producer, na.rm = T),
type = max(type, na.rm = T),
energy_class = max(energy_class, na.rm = T)),
by = common_item_id]
# Change Inf to Na
dt_attribute[dt_attribute$energy_consumption == "-Inf", "energy_consumption"] <- NA
dt_attribute[dt_attribute$guarantee_month == "-Inf", "guarantee_month"] <- NA
dt_attribute[dt_attribute$width_cm == "-Inf", "width_cm"] <- NA
dt_attribute[dt_attribute$height_cm == "-Inf", "height_cm"] <- NA
dt_attribute[dt_attribute$depth_cm == "-Inf", "depth_cm"] <- NA
dt_attribute[dt_attribute$weight_kg == "-Inf", "weight_kg"] <- NA
dt_attribute[dt_attribute$n_doors == "-Inf", "n_doors"] <- NA
dt_attribute[dt_attribute$cooling_capacity_l == "-Inf", "cooling_capacity_l"] <- NA
dt_attribute[dt_attribute$freezing_capacity_l == "-Inf", "freezing_capacity_l"] <- NA
dt_attribute[dt_attribute$colour == "-Inf", "colour"] <- NA
dt_attribute[dt_attribute$producer == "-Inf", "producer"] <- NA
dt_attribute[dt_attribute$type == "-Inf", "type"] <- NA
dt_attribute[dt_attribute$energy_class == "-Inf", "energy_class"] <- NA
dt_attribute$total_capacity <- ifelse(is.na(dt_attribute$cooling_capacity_l) == TRUE,
0,
dt_attribute$cooling_capacity_l
) +
ifelse(is.na(dt_attribute$freezing_capacity_l) == TRUE,
0,
dt_attribute$freezing_capacity_l
)
View(dt_attribute)
# Filter for relevant columns
dt_attribute <- dt_refrigerator %>% select("common_item_id",
"item_name_short",
"colour",
"producer",
"type",
"energy_class",
"energy_consumption",
"guarantee_month",
"width_cm",
"height_cm",
"depth_cm",
"weight_kg",
"n_doors",
"cooling_capacity_l",
"freezing_capacity_l")
# Create attribute table
dt_attribute <- dt_attribute[,list(item_name_short = max(item_name_short, na.rm = T),
colour = max(colour, na.rm = T),
producer = max(producer, na.rm = T),
type = max(type, na.rm = T),
energy_class = max(energy_class, na.rm = T),
energy_consumption = max(energy_consumption, na.rm = T),
guarantee_month = max(guarantee_month, na.rm = T),
width_cm = max(width_cm, na.rm = T),
height_cm = max(height_cm, na.rm = T),
depth_cm = max(depth_cm, na.rm = T),
weight_kg = max(weight_kg, na.rm = T),
n_doors = max(n_doors, na.rm = T),
cooling_capacity_l = max(cooling_capacity_l, na.rm = T),
freezing_capacity_l = max(freezing_capacity_l, na.rm = T)),
by = common_item_id]
# Change Inf to Na
dt_attribute[dt_attribute$energy_consumption == "-Inf", "energy_consumption"] <- NA
dt_attribute[dt_attribute$guarantee_month == "-Inf", "guarantee_month"] <- NA
dt_attribute[dt_attribute$width_cm == "-Inf", "width_cm"] <- NA
dt_attribute[dt_attribute$height_cm == "-Inf", "height_cm"] <- NA
dt_attribute[dt_attribute$depth_cm == "-Inf", "depth_cm"] <- NA
dt_attribute[dt_attribute$weight_kg == "-Inf", "weight_kg"] <- NA
dt_attribute[dt_attribute$n_doors == "-Inf", "n_doors"] <- NA
dt_attribute[dt_attribute$cooling_capacity_l == "-Inf", "cooling_capacity_l"] <- NA
dt_attribute[dt_attribute$freezing_capacity_l == "-Inf", "freezing_capacity_l"] <- NA
dt_attribute[dt_attribute$colour == "-Inf", "colour"] <- NA
dt_attribute[dt_attribute$producer == "-Inf", "producer"] <- NA
dt_attribute[dt_attribute$type == "-Inf", "type"] <- NA
dt_attribute[dt_attribute$energy_class == "-Inf", "energy_class"] <- NA
dt_attribute$common_item_name <- paste(dt_attribute$item_name_short, dt_attribute$colour, sep = " ")
dt_attribute$total_capacity <- ifelse(is.na(dt_attribute$cooling_capacity_l) == TRUE,
0,
dt_attribute$cooling_capacity_l
) +
ifelse(is.na(dt_attribute$freezing_capacity_l) == TRUE,
0,
dt_attribute$freezing_capacity_l
)
View(dt_attribute)
names(dt_refrigerator)
dt_refrigerator_final <- dt_refrigerator %>% select("common_item_id",
"item_price_edigital",
"item_price_mediamarkt",
"website",
"link_edigital",
"link_mediamarkt"
)
View(dt_refrigerator)
dt_refrigerator_final <- dt_refrigerator %>% select("common_item_id",
"item_price_edigital",
"item_price_mediamarkt",
"website",
"link_edigital",
"link_mediamarkt"
)
# item_price
dt_refrigerator_final$item_price <- ifelse(dt_refrigerator_final$website == "edigital",
dt_refrigerator_final$item_price_edigital,
dt_refrigerator_final$item_price_mediamarkt)
# link
dt_refrigerator_final$link <- ifelse(dt_refrigerator_final$website == "edigital",
dt_refrigerator_final$link_edigital,
dt_refrigerator_final$link_mediamarkt)
# Drop columns
dt_refrigerator_final$item_price_edigital <- NULL
dt_refrigerator_final$item_price_mediamarkt <- NULL
dt_refrigerator_final$link_edigital <- NULL
dt_refrigerator_final$link_mediamarkt <- NULL
# Merge attributes
dt_refrigerator_final2 <- merge(dt_refrigerator_final, dt_attribute, by = common_item_name)
dt_refrigerator_final <- dt_refrigerator %>% select("common_item_id",
"item_price_edigital",
"item_price_mediamarkt",
"website",
"link_edigital",
"link_mediamarkt"
)
# item_price
dt_refrigerator_final$item_price <- ifelse(dt_refrigerator_final$website == "edigital",
dt_refrigerator_final$item_price_edigital,
dt_refrigerator_final$item_price_mediamarkt)
# link
dt_refrigerator_final$link <- ifelse(dt_refrigerator_final$website == "edigital",
dt_refrigerator_final$link_edigital,
dt_refrigerator_final$link_mediamarkt)
# Drop columns
dt_refrigerator_final$item_price_edigital <- NULL
dt_refrigerator_final$item_price_mediamarkt <- NULL
dt_refrigerator_final$link_edigital <- NULL
dt_refrigerator_final$link_mediamarkt <- NULL
# Merge attributes
dt_refrigerator_final2 <- merge(dt_refrigerator_final, dt_attribute, by = common_item_id)
# Merge attributes
dt_refrigerator_final2 <- merge(dt_refrigerator_final, dt_attribute, by = "common_item_id")
View(dt_refrigerator_final2)
# Merge attributes
dt_refrigerator_final <- merge(dt_refrigerator_final, dt_attribute, by = "common_item_id")
names(dt_refrigerator_final)
# Rearrange columns order
dt_refrigerator_final2 <- dt_refrigerator_final %>% select("common_item_id",
"common_item_name",
"item_name_short"
"colour",
# Rearrange columns order
dt_refrigerator_final2 <- dt_refrigerator_final %>% select("common_item_id",
"common_item_name",
"item_name_short",
"colour",
"producer",
"type",
"energy_class",
"energy_consumption",
"guarantee_month",
"width_cm",
"height_cm",
"depth_cm",
"weight_kg",
"n_doors",
"cooling_capacity_l",
"freezing_capacity_l",
"website",
"item_price",
"link",)
# Rearrange columns order
dt_refrigerator_final2 <- dt_refrigerator_final %>% select("common_item_id",
"common_item_name",
"item_name_short",
"colour",
"producer",
"type",
"energy_class",
"energy_consumption",
"guarantee_month",
"width_cm",
"height_cm",
"depth_cm",
"weight_kg",
"n_doors",
"cooling_capacity_l",
"freezing_capacity_l",
"total_capacity",
"website",
"item_price",
"link")
View(dt_refrigerator_final2)
data_out <-paste0(dir, "work/")
write_tsv(dt_refrigerator_final, path = paste0(data_out,"dt_refrigerator_workfile.tsv"))
# clear memory
rm(list=ls())
# set working directory
dir <- "C:/Users/gat/OneDrive – Central European University/Data_architecture/Home_work_data_product/"
data_in <- paste0(dir, "raw/")
data_out <-paste0(dir, "clean/")
# Read libraries
library(tidyverse)     # General purpose data wrangling
library(data.table)
library(dplyr)
library(readr) # for tsv
library(stringr)
data_out <-paste0(dir, "work/")
dt_refrigerator_final <- read_tsv(paste0(data_out, 'dt_refrigerator_openrefiner_final.tsv')) %>% as.data.table()
dt_refrigerator_final <- read_tsv(paste0(data_out, 'dt_refrigerator_workfile.tsv')) %>% as.data.table()
library(rjson)
install.packages("RJSONIO")
writeLines(toJSON(dt_refrigerator_final), "dt_refrigerator_final.JSON")
writeLines(toJSON(dt_refrigerator_final), paste0(data_out,"dt_refrigerator_final.JSON"))
?writeLines
